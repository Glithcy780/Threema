//  _____ _
// |_   _| |_  _ _ ___ ___ _ __  __ _
//   | | | ' \| '_/ -_) -_) '  \/ _` |_
//   |_| |_||_|_| \___\___|_|_|_\__,_(_)
//
// Threema iOS Client
// Copyright (c) 2023-2024 Threema GmbH
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License, version 3,
// as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

import Foundation
import ThreemaEssentials
import XCTest

@testable import GroupCalls

final class CallIDTests: XCTestCase {
    func testBasicInit() throws {
        // Generated by a known good version
        let goldVal = "239bfd17bd6e9b9c753e8d092691e7d3fd623aef1c50a88e88f435ef78474753"

        let creatorIdentity = ThreemaIdentity("ECHOECHO")
        let groupIdentity = GroupIdentity(id: Data(repeating: 0x00, count: 8), creator: creatorIdentity)
        let gck = Data(repeating: 0x01, count: 32)
        
        let groupCallStartData = GroupCallStartData(protocolVersion: 0, gck: gck, sfuBaseURL: "")
        
        let callID = try XCTUnwrap(try? GroupCallID(
            groupIdentity: groupIdentity,
            callStartData: groupCallStartData,
            dependencies: MockDependencies().create()
        ))
        
        XCTAssertEqual(callID.bytes.hexEncodedString(), goldVal)
    }
}
